import React, { useState } from 'react';

const TextReader = ({ language, voice, speed }) => {
  const [text, setText] = useState('');
  const [isPlaying, setIsPlaying] = useState(false);
  const [isLoading, setIsLoading] = useState(false);

  const handleReadAloud = async () => {
    if (!text.trim()) return;

    setIsLoading(true);
    try {
      // First, process the text for better TTS
      const processResponse = await fetch('http://localhost:5000/api/process-text', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ text, language })
      });
      
      const processed = await processResponse.json();
      
      // Then convert to speech
      const ttsResponse = await fetch('http://localhost:5000/api/tts', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ 
          text: processed.processedText, 
          voice, 
          language,
          speed 
        })
      });

      const audioBlob = await ttsResponse.blob();
      const audioUrl = URL.createObjectURL(audioBlob);
      const audio = new Audio(audioUrl);
      
      audio.onplay = () => setIsPlaying(true);
      audio.onended = () => {
        setIsPlaying(false);
        URL.revokeObjectURL(audioUrl);
      };
      audio.onerror = () => {
        setIsPlaying(false);
        setIsLoading(false);
      };

      await audio.play();
      
    } catch (error) {
      console.error('Error playing audio:', error);
      alert('Error converting text to speech. Please try again.');
    } finally {
      setIsLoading(false);
    }
  };

  const sampleTexts = {
    en: "Welcome to VoiceAssist! This platform helps make digital content accessible to everyone through high-quality text-to-speech technology.",
    hi: "‡§µ‡•â‡§Ø‡§∏‡§Ö‡§∏‡§ø‡§∏‡•ç‡§ü ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à! ‡§Ø‡§π ‡§™‡•ç‡§≤‡•á‡§ü‡§´‡•â‡§∞‡•ç‡§Æ ‡§â‡§ö‡•ç‡§ö-‡§ó‡•Å‡§£‡§µ‡§§‡•ç‡§§‡§æ ‡§µ‡§æ‡§≤‡•Ä ‡§ü‡•á‡§ï‡•ç‡§∏‡•ç‡§ü-‡§ü‡•Ç-‡§∏‡•ç‡§™‡•Ä‡§ö ‡§§‡§ï‡§®‡•Ä‡§ï ‡§ï‡•á ‡§Æ‡§æ‡§ß‡•ç‡§Ø‡§Æ ‡§∏‡•á ‡§°‡§ø‡§ú‡§ø‡§ü‡§≤ ‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä ‡§ï‡•ã ‡§∏‡§≠‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ‡§∏‡•Å‡§≤‡§≠ ‡§¨‡§®‡§æ‡§®‡•á ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§",
    mr: "‡§µ‡•â‡§á‡§∏‡§Ö‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ‡§ß‡•ç‡§Ø‡•á ‡§Ü‡§™‡§≤‡•á ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§Ü‡§π‡•á! ‡§π‡•á ‡§™‡•ç‡§≤‡•Ö‡§ü‡§´‡•â‡§∞‡•ç‡§Æ ‡§â‡§ö‡•ç‡§ö-‡§ó‡•Å‡§£‡§µ‡§§‡•ç‡§§‡•á‡§ö‡•ç‡§Ø‡§æ ‡§Æ‡§ú‡§ï‡•Ç‡§∞-‡§§‡•á-‡§≠‡§æ‡§∑‡§£ ‡§§‡§Ç‡§§‡•ç‡§∞‡§ú‡•ç‡§û‡§æ‡§®‡§æ‡§¶‡•ç‡§µ‡§æ‡§∞‡•á ‡§°‡§ø‡§ú‡§ø‡§ü‡§≤ ‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï‡§æ‡§∏‡§æ‡§†‡•Ä ‡§∏‡•Å‡§≤‡§≠ ‡§ï‡§∞‡§£‡•ç‡§Ø‡§æ‡§∏ ‡§Æ‡§¶‡§§ ‡§ï‡§∞‡§§‡•á.",
    te: "‡∞µ‡∞æ‡∞Ø‡∞ø‡∞∏‡±ç ‡∞Ö‡∞∏‡∞ø‡∞∏‡±ç‡∞ü‡±ç‚Äå‡∞ï‡±Å ‡∞∏‡±ç‡∞µ‡∞æ‡∞ó‡∞§‡∞Ç! ‡∞à ‡∞™‡±ç‡∞≤‡∞æ‡∞ü‡±ç‚Äå‡∞´‡∞æ‡∞∞‡±ç‡∞Æ‡±ç ‡∞π‡±à-‡∞ï‡±ç‡∞µ‡∞æ‡∞≤‡∞ø‡∞ü‡±Ä ‡∞ü‡±Ü‡∞ï‡±ç‡∞∏‡±ç‡∞ü‡±ç-‡∞ü‡±Å-‡∞∏‡±ç‡∞™‡±Ä‡∞ö‡±ç ‡∞ü‡±Ü‡∞ï‡±ç‡∞®‡∞æ‡∞≤‡∞ú‡±Ä ‡∞¶‡±ç‡∞µ‡∞æ‡∞∞‡∞æ ‡∞°‡∞ø‡∞ú‡∞ø‡∞ü‡∞≤‡±ç ‡∞ï‡∞Ç‡∞ü‡±Ü‡∞Ç‡∞ü‡±ç‚Äå‡∞®‡±Å ‡∞Ö‡∞Ç‡∞¶‡∞∞‡∞ø‡∞ï‡±Ä ‡∞Ö‡∞Ç‡∞¶‡±Å‡∞¨‡∞æ‡∞ü‡±Å‡∞≤‡±ã‡∞ï‡∞ø ‡∞§‡±Ü‡∞∏‡±ç‡∞§‡±Å‡∞Ç‡∞¶‡∞ø."
  };

  return (
    <div className="text-reader">
      <h2>üìñ Text Reader</h2>
      <p>Paste or type any text to have it read aloud in your preferred language.</p>
      
      <div className="sample-texts">
        <h4>Try sample text:</h4>
        <div className="sample-buttons">
          {Object.entries(sampleTexts).map(([lang, sample]) => (
            <button
              key={lang}
              className="sample-btn"
              onClick={() => setText(sample)}
            >
              {lang.toUpperCase()}
            </button>
          ))}
        </div>
      </div>

      <textarea
        value={text}
        onChange={(e) => setText(e.target.value)}
        placeholder="Enter text here to convert to speech..."
        rows="10"
        className="text-input"
        aria-label="Text to convert to speech"
      />

      <div className="text-stats">
        <span>Characters: {text.length}</span>
        <span>Words: {text.trim() ? text.trim().split(/\s+/).length : 0}</span>
      </div>

      <button
        onClick={handleReadAloud}
        disabled={!text.trim() || isLoading || isPlaying}
        className="read-aloud-btn"
      >
        {isLoading ? 'üîÑ Processing...' : 
         isPlaying ? 'üîä Playing...' : 
         'üéµ Read Aloud'}
      </button>

      <div className="accessibility-tips">
        <h4>‚ôø Accessibility Tips:</h4>
        <ul>
          <li>Use clear, simple language for better speech synthesis</li>
          <li>Break long texts into smaller paragraphs</li>
          <li>Use proper punctuation for natural pauses</li>
          <li>Adjust speed according to your preference</li>
        </ul>
      </div>
    </div>
  );
};

export default TextReader;